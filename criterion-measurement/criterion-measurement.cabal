name:                criterion-measurement
version:             0.2.3.0
synopsis:            Criterion measurement functionality and associated types
description:         Measurement-related functionality extracted from Criterion, with minimal dependencies. The rationale for this is to enable alternative analysis front-ends.
homepage:            https://github.com/haskell/criterion
license:             BSD3
license-file:        LICENSE
author:              Bryan O'Sullivan <bos@serpentine.com>
maintainer:          Marco Zocca <zocca.marco gmail>, Ryan Scott <ryan.gl.scott@gmail.com>
copyright:           2009-2016 Bryan O'Sullivan and others
category:            Development, Performance, Testing, Benchmarking
build-type:          Simple
extra-source-files:  README.md, changelog.md
cabal-version:       >=1.10
tested-with:
  GHC==8.0.2,
  GHC==8.2.2,
  GHC==8.4.4,
  GHC==8.6.5,
  GHC==8.8.4,
  GHC==8.10.7,
  GHC==9.0.2,
  GHC==9.2.8,
  GHC==9.4.8,
  GHC==9.6.6,
  GHC==9.8.2,
  GHC==9.10.1

flag fast
  description: compile without optimizations
  default: False
  manual: True

library
  hs-source-dirs:      src
  exposed-modules:     Criterion.Measurement
                       Criterion.Measurement.Types
                       Criterion.Measurement.Types.Internal
  build-depends:       aeson >= 2 && < 2.3
                     , base >= 4.9 && < 5
                     , base-compat >= 0.9
                     , binary >= 0.8.3.0
                     , containers
                     , deepseq >= 1.1.0.0
                     , ghc-prim >= 0.5
                     , vector >= 0.7.1

  default-language: Haskell2010
  ghc-options: -Wall -funbox-strict-fields -Wtabs
  if flag(fast)
    ghc-options: -O0
  else
    ghc-options: -O2


  c-sources: cbits/cycles.c
  if os(darwin)
    c-sources: cbits/time-osx.c
  else {
    if os(windows)
      c-sources: cbits/time-windows.c
    else
      c-sources: cbits/time-posix.c
  }


source-repository head
  type:     git
  location: https://github.com/haskell/criterion
  subdir:   criterion-measurement
